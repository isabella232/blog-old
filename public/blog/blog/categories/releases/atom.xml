<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: releases | Rollbar - Blog - real-time error tracking for Rails, Python, PHP, Javascript, and Flash]]></title>
  <link href="http://rollbar.com/blog/blog/categories/releases/atom.xml" rel="self"/>
  <link href="http://rollbar.com/blog/"/>
  <updated>2013-07-12T14:04:30-07:00</updated>
  <id>http://rollbar.com/blog/</id>
  <author>
    <name><![CDATA[Rollbar, Inc.]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[May Release Roundup]]></title>
    <link href="http://rollbar.com/blog/post/2013/05/29/may-release-roundup/"/>
    <updated>2013-05-29T15:30:00-07:00</updated>
    <id>http://rollbar.com/blog/post/2013/05/29/may-release-roundup</id>
    <content type="html"><![CDATA[<p>Here's a roundup of what's new at Rollbar in the month of May.</p>

<h3>Big Features</h3>

<p>We revamped our notifications system, and added integrations with a bunch of new services. Rollbar now works with <a href="http://asana.com">Asana</a>, <a href="http://campfirenow.com/">Campfire</a>, <a href="https://flowdock.com">Flowdock</a>, <a href="https://github.com/features/projects/issues">Github Issues</a>, <a href="http://hipchat.com">Hipchat</a>, <a href="http://jira.com">JIRA</a>, <a href="http://pivotaltracker.com">Pivotal Tracker</a>, and <a href="http://trello.com">Trello</a>, as well as any arbitrary system via a <a href="http://www.webhooks.org/">Webhook</a>. See the <a href="https://rollbar.com/blog/post/2013/05/06/rules-engine-for-notifications-campfire-hipchat-jira-trello/">announcement blog post</a> for more details.</p>

<h3>Small Features</h3>

<ul>
<li><p>You can now customize how occurrences are grouped. This first release allows you to define rules of things that should always be grouped together. See the documentation: <a href="https://rollbar.com/docs/guides_custom_grouping/">Custom Grouping Rules</a>. An in-depth post on how to use this is coming soon.</p></li>
<li><p>There's now a "Download CSV" link at the bottom of the Items page, which will let you download a CSV of what you see on the page. Note that this information is also available via our <a href="https://rollbar.com/docs/test_console/">API</a>.</p>

<p><img src="https://d37gvrvc0wt4s1.cloudfront.net/static/img/blog/download-csv.png"></p></li>
<li><p>You can now sort the Items page by Total Occurrences or Unique Users, in additon to Last Occurrence. Click on the column headers to change the sort.</p>

<p><img src="https://d37gvrvc0wt4s1.cloudfront.net/static/img/blog/item-list-sort.png"></p></li>
<li><p>Links to files in Github are now linked to the appropriate revision, when this information is available. We'll use one of the following (trying each in order):</p>

<ul>
<li>the value of <code>server.sha</code></li>
<li>the value of <code>server.branch</code>, if it looks like a SHA</li>
<li>the revision from the last deploy before the first occurrence of the item</li>
</ul>
</li>
</ul>


<h3>Library Updates</h3>

<h4>Ruby</h4>

<p>We released <a href="https://github.com/rollbar/rollbar-gem">rollbar-gem</a> versions 0.9.11 through 0.9.14. The changes include a fix for use with Rails 4, a concurrency bugfix, better support for JSON requests, and the ability to include custom metadata with all reports. See the full <a href="https://github.com/rollbar/rollbar-gem/blob/master/CHANGELOG.md">changelog</a> for details. To upgrade, change the rollbar line in your Gemfile to:</p>

<p><code>ruby
gem 'rollbar', '~&gt; 0.9.14'
</code></p>

<p>We also contributed a fix to <a href="https://github.com/CrowdFlower/resque-rollbar">resque-rollbar</a> to force use of synchronous mode when reporting Resque failures (instead of async mode, which doesn't play nicely with Resque).</p>

<h4>Python</h4>

<p><a href="https://github.com/rollbar/pyrollbar">pyrollbar</a> gained a feature and now at version 0.5.7. See the <a href="https://github.com/rollbar/pyrollbar/blob/master/CHANGELOG.md">changelog</a> for details.</p>

<h3>Bug Fixes</h3>

<ul>
<li>Fixed an issue where pressing the back button would sometimes cause Chrome to render one of our JSON responses as if it were HTML</li>
<li>Fixed a bug where removed email addresses could not be re-added</li>
</ul>


<h3>Documentation Updates</h3>

<ul>
<li>Added guide on how our <a href="https://rollbar.com/docs/guides_grouping/">grouping algorithm</a> works.</li>
<li>Cleaned up our <a href="https://rollbar.com/docs/api_items/">Items API Reference</a> and fixed a few outdated parts</li>
</ul>


<p>More is on the way. Stay tuned! And don't forget to send us any feedback: <a href="mailto:team@rollbar.com">team@rollbar.com</a> &mdash; we love hearing from you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rules Engine for Notifications, Plus Integrations with Campfire, Hipchat, JIRA, and Trello]]></title>
    <link href="http://rollbar.com/blog/post/2013/05/06/rules-engine-for-notifications-campfire-hipchat-jira-trello/"/>
    <updated>2013-05-06T21:30:00-07:00</updated>
    <id>http://rollbar.com/blog/post/2013/05/06/rules-engine-for-notifications-campfire-hipchat-jira-trello</id>
    <content type="html"><![CDATA[<p>Today we're revamping the model for defining what you want to be notified about from <a href="https://rollbar.com">Rollbar</a>. Rollbar now integrates with <a href="http://asana.com">Asana</a>, <a href="http://campfirenow.com/">Campfire</a>, <a href="https://github.com/features/projects/issues">Github Issues</a>, <a href="http://hipchat.com">Hipchat</a>, <a href="http://jira.com">JIRA</a>, <a href="http://pivotaltracker.com">Pivotal Tracker</a>, and <a href="http://trello.com">Trello</a>, as well as any arbitrary system via a <a href="http://www.webhooks.org/">Webhook</a>.</p>

<h2>New Integration Channels</h2>

<p>In addition to our existing channels (Email, Asana, Github Issues, Pivotal Tracker, and Webhook), we're launching support for four more: Campfire, Hipchat, JIRA, and Trello. You can set up all of this in Settings -> Notifications.</p>

<p><img src="https://d37gvrvc0wt4s1.cloudfront.net/static/img/blog/integration-channels.png"></p>

<h2>Notification Rules Engine</h2>

<p>Notifications are now configured per-project (instead of per-user-per-project), using a trigger-action model. There are triggers for the following events:</p>

<ul>
<li>New Item (first occurrence of a new issue)</li>
<li>Reactivated Item (a previously resolved issue has occurred again)</li>
<li>10<sup>nth</sup> Occurrence (an issue has occurred for the 10th, 100th, etc. time)</li>
<li>Resolved Item (an item has been resolved by hand)</li>
<li>Reopened Item (an item has been reopened by hand)</li>
<li>Post-deploy (you've notified us that you deployed a new release)</li>
</ul>


<p>Corresponding actions are available for most actions in most channels. If it would make sense, it probably exists.</p>

<p><img src="https://d37gvrvc0wt4s1.cloudfront.net/static/img/blog/rules-engine.png"></p>

<p>Most actions can be configured as you'd expect (i.e. set which teams should receive an email, or which user to assign JIRA issues to).</p>

<p>Item-related triggers can be filtered by environment, level, title (exception class+message), and filename. Deploy triggers can be filtered by environment and comment. Our underlying tech supports much more than the UI exposes, so let us know what other filters you'd like to see.</p>

<h2>Migration for existing customers</h2>

<p>We've migrated existing customers' settings to the new system, but there were a few aspects that didn't map very well (i.e. per-user-per-project settings). We hope the new system is easier to use for most use-cases and still workable for complex setups, but let us know if there's something you are having trouble doing.</p>

<h2>Questions? Feedback?</h2>

<p>Let us know if you have any questions about how to get the notifications you want. We look forward to your feedback. What other integrations do you want? Let us know in the comments, or email us at <a href="mailto:team@rollbar.com">team@rollbar.com</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Real-time Search for Exceptions and Errors]]></title>
    <link href="http://rollbar.com/blog/post/2012/10/24/real-time-search-for-exceptions-and-errors/"/>
    <updated>2012-10-24T11:24:00-07:00</updated>
    <id>http://rollbar.com/blog/post/2012/10/24/real-time-search-for-exceptions-and-errors</id>
    <content type="html"><![CDATA[<p>We're happy today to announce the release of real-time search. You can now search your exceptions, errors, and log messages by title:</p>

<p><img src="https://d37gvrvc0wt4s1.cloudfront.net/static/img/blog/realtimesearch1.png"></p>

<p>For exceptions, the title contains the exception class and message. For errors and log messages, it contains the entire message. Itâ€™s a full-text search that works best on whole words; we also do a few tricks with camelCase and underscore_separated terms.</p>

<p>The search index is kept up-to-date in real-time as new items are added to the system (that's the "real-time" part). Typically the delay is ~2 seconds from receiving the input at our API to being in the index and searchable.</p>

<p>Current customers can try it out now; let us know if you run into any issues. What else would you like to see indexed?</p>

<p>If you don't have an account yet, <a href="https://rollbar.com/">sign up here for early access</a>.</p>

<h2>Under the hood</h2>

<p>We're using the new <a href="http://sphinxsearch.com/">Sphinx</a> realtime features for indexing and querying. It's currently running on a single dedicated machine (1 core, 2GB ram, 100GB local disk).</p>

<p>New items are indexed by a long-running script that indexes new items as they are inserted. (It keeps track of its location in the table and polls every second for new rows.) The index includes two full-text <em>fields</em>, <code>title</code> and <code>environment</code>, and two scalar <em>attributes</em>, <code>status</code> and <code>level</code>.</p>

<p>Title and environment don't change, so we don't need to update them. But status (active/resolved) and level (critical/error/warning/info/debug) do. We keep these in sync by simply writing to the search server whenever we update the primary database and whenever we modify our tokenizing algorithm.</p>

<p>Queries are routed through our API server, which returns the paged list of matching item ids that we can then use to filter with on our primary database, (in case the search results are out of date) and fetch the other data necessary for the results page (last occurrence, etc.)</p>

<p>Although our setup is straightforward, there were a few gotchas and lessons learned.</p>

<h3>Infix queries</h3>

<p>Sphinx's realtime index does not currently support infix queries. That means that if youâ€™re searching for "Error" then exceptions with titles like "ReferenceError" or "not_found_error" or even "(Error)" would not be found. To get around this, we index both the original title as well as another set of tokens that weâ€™ve determined are useful for the lookup.</p>

<p>e.g. "#462 UnicodeEncodeError: 'latin-1' codec can't encode character u'\u0441' in position 71: ordinal not in range(256)"</p>

<p>gets tokenized and becomes</p>

<p>"#462 UnicodeEncodeError: 'latin-1' codec can't encode character u'\u0441' in position 71: ordinal not in range(256) canâ€™t u0441 71 256 Unicode Encode Error latin-1'"</p>

<p>By tacking on these extra tokens, we are able to support most of the relevant infix searches our users are likely to make.</p>

<h3>Sphinx + MySQL</h3>

<p>Sphinx search comes with a super-handy feature that lets you connect, add and query the search index using a vanilla MySQL protocol. This is great for debugging and testing but comes with some caveats.</p>

<p>There are a lot of operations that SphinxQL does not yet support. One of the major ones is the lack of support for "OR" where_conditions and another is lack of a "COUNT(*)" method.</p>

<p>Since our API server is written in node, we were able to use the <a href="https://github.com/felixge/node-mysql">node-mysql</a> library from Felix GeisendÃ¶rfer. After plugging in the library, we noticed that the Sphinx server drops client connections fairly rigorously so we implemented a layer on top of the node-mysql library to handle reconnects, disconnects, etc... This has been great since it lets us perform maintenance on the Sphinx server without taking down our API server.</p>

<h3>REPLACE</h3>

<p>Lastly, we made sure that we were able to re-index our entire database into our Sphinx server by only using the REPLACE command when inserting new items. The docs mention that this can cause memory issues but since it's so infrequent for our use-case, we haven't run into any trouble and the benefit of re-indexing whenever we want more than makes up for it.</p>
]]></content>
  </entry>
  
</feed>
